<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yunda.base.feiniao.report.dao.ReportFluctuateDao">
	


	<select id="getDoWithCitySheng" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select                                                 
				base4.provinceid,base4.ProvinceName,base4.bigarea,     
				sum(base4.order_sum           ) order_sum,             
				sum(base4.order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,             
				sum(base4.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base4.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base4.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(base4.customer_sum) customer_sum,                  
				sum(base4.order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,            
				sum(base4.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(base4.a_customer_sum)    a_customer_sum,           
				sum(base4.b_customer_sum)    b_customer_sum,           
				sum(base4.c_customer_sum)    c_customer_sum,           
				sum(base4.d_customer_sum)    d_customer_sum,           
				sum(base4.e_customer_sum)    e_customer_sum,           
				sum(base4.f_customer_sum)    f_customer_sum,           
				sum(base4.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(base4.a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                 
				sum(base4.b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)   b_order_avg,                 
				sum(base4.c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                 
				sum(base4.d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                 
				sum(base4.e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                 
				sum(base4.f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                 
				sum(base4.g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                 
				                                                       
				sum(base4.a_order_sum) a_order_sum,                    
				sum(base4.b_order_sum) b_order_sum,                    
				sum(base4.c_order_sum) c_order_sum,                    
				sum(base4.d_order_sum) d_order_sum,                    
				sum(base4.e_order_sum) e_order_sum,                    
				sum(base4.f_order_sum) f_order_sum,                    
				sum(base4.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base4
				where   1 = 1
					and base4.qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY base4.provinceid,base4.ProvinceName,base4.bigarea
		) a 
		LEFT JOIN 
		(
			select                                                 
				f.provinceid,f.ProvinceName,f.bigarea,     
				sum(f.order_sum           ) order_sum,             
				sum(f.order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,             
				sum(f.cainiao_order_sum   ) cainiao_order_sum,     
				sum(f.qrcode_order_sum    ) qrcode_order_sum,      
				sum(f.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(f.customer_sum) customer_sum,                  
				sum(f.order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,            
				sum(f.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(f.a_customer_sum)    a_customer_sum,           
				sum(f.b_customer_sum)    b_customer_sum,           
				sum(f.c_customer_sum)    c_customer_sum,           
				sum(f.d_customer_sum)    d_customer_sum,           
				sum(f.e_customer_sum)    e_customer_sum,           
				sum(f.f_customer_sum)    f_customer_sum,           
				sum(f.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(f.a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                 
				sum(f.b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                 
				sum(f.c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    c_order_avg,                 
				sum(f.d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                 
				sum(f.e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                 
				sum(f.f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                 
				sum(f.g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    g_order_avg,                 
				                                                       
				sum(f.a_order_sum) a_order_sum,                    
				sum(f.b_order_sum) b_order_sum,                    
				sum(f.c_order_sum) c_order_sum,                    
				sum(f.d_order_sum) d_order_sum,                    
				sum(f.e_order_sum) e_order_sum,                    
				sum(f.f_order_sum) f_order_sum,                    
				sum(f.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum f
				where   
				1 = 1
							 and f.qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY f.provinceid,f.ProvinceName,f.bigarea
			) b ON a.provinceid = b.provinceid
			
		LEFT JOIN
		(
			select provinceid pid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea, 
										sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
										sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
										sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
										sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
										sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
										sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
										sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																										
										sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
										sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
										sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
										sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
										sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
										sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
										sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
																																																																									 
								from 
								(
													select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
								) base                                                                
								LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
								LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                                 
								GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.provinceid = #{TProvinceId}
			GROUP BY f.provinceid
		 ) c on a.provinceid = c.pid
		where 1=1 
		and a.provinceid  = #{TProvinceId}
	</select>
	
	<!--2019-01-01开始执行新的客户分段及返利金额逻辑
		查询时间段最后时间为2019-01-01及2019-01-01后面的，就使用新逻辑判断
	 -->
	<select id="getDoWithCityShengNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select                                                 
				base4.provinceid,base4.ProvinceName,base4.bigarea,     
				sum(base4.order_sum           ) order_sum,             
				sum(base4.order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,             
				sum(base4.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base4.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base4.ordinary_order_sum  ) ordinary_order_sum,    
																	   
				sum(base4.customer_sum) customer_sum,                  
				sum(base4.order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,            
				sum(base4.dianzi_order_sum)     dianzi_order_sum,      
																	   
				sum(base4.a_customer_sum)    a_customer_sum,           
				sum(base4.b_customer_sum)    b_customer_sum,           
				sum(base4.c_customer_sum)    c_customer_sum,           
				sum(base4.d_customer_sum)    d_customer_sum,           
				sum(base4.e_customer_sum)    e_customer_sum,           
				sum(base4.f_customer_sum)    f_customer_sum,           
				sum(base4.g_customer_sum)    g_customer_sum,           
																	   
				sum(base4.a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                 
				sum(base4.b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)   b_order_avg,                 
				sum(base4.c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                 
				sum(base4.d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                 
				sum(base4.e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                 
				sum(base4.f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                 
				sum(base4.g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                 
																	   
				sum(base4.a_order_sum) a_order_sum,                    
				sum(base4.b_order_sum) b_order_sum,                    
				sum(base4.c_order_sum) c_order_sum,                    
				sum(base4.d_order_sum) d_order_sum,                    
				sum(base4.e_order_sum) e_order_sum,                    
				sum(base4.f_order_sum) f_order_sum,                    
				sum(base4.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base4
				where   1 = 1
					and base4.qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY base4.provinceid,base4.ProvinceName,base4.bigarea
		) a 
		LEFT JOIN 
		(
			select                                                 
				f.provinceid,f.ProvinceName,f.bigarea,     
				sum(f.order_sum           ) order_sum,             
				sum(f.order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,             
				sum(f.cainiao_order_sum   ) cainiao_order_sum,     
				sum(f.qrcode_order_sum    ) qrcode_order_sum,      
				sum(f.ordinary_order_sum  ) ordinary_order_sum,    
																	   
				sum(f.customer_sum) customer_sum,                  
				sum(f.order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,            
				sum(f.dianzi_order_sum)     dianzi_order_sum,      
																	   
				sum(f.a_customer_sum)    a_customer_sum,           
				sum(f.b_customer_sum)    b_customer_sum,           
				sum(f.c_customer_sum)    c_customer_sum,           
				sum(f.d_customer_sum)    d_customer_sum,           
				sum(f.e_customer_sum)    e_customer_sum,           
				sum(f.f_customer_sum)    f_customer_sum,           
				sum(f.g_customer_sum)    g_customer_sum,           
																	   
				sum(f.a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                 
				sum(f.b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                 
				sum(f.c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    c_order_avg,                 
				sum(f.d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                 
				sum(f.e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                 
				sum(f.f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                 
				sum(f.g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    g_order_avg,                 
																	   
				sum(f.a_order_sum) a_order_sum,                    
				sum(f.b_order_sum) b_order_sum,                    
				sum(f.c_order_sum) c_order_sum,                    
				sum(f.d_order_sum) d_order_sum,                    
				sum(f.e_order_sum) e_order_sum,                    
				sum(f.f_order_sum) f_order_sum,                    
				sum(f.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum f
				where   
				1 = 1
							 and f.qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY f.provinceid,f.ProvinceName,f.bigarea
			) b ON a.provinceid = b.provinceid
			
		LEFT JOIN
		(
			select provinceid pid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea, 
										sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
										sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
										sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
										sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
										sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
										sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
										sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																										
										sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
										sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
										sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
										sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
										sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
										sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
										sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
																																																																									 
								from 
								(
													select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
								) base                                                                
								LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
								LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format ('2019-01-01','%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
								GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.provinceid = #{TProvinceId}
			GROUP BY f.provinceid
		 ) c on a.provinceid = c.pid
		where 1=1 
		and a.provinceid  = #{TProvinceId}
	</select>
	
	<select id="getDoWithCityShi" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
			select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
						qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) a
		LEFT JOIN 
		(
				select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)   c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
						qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) b
		ON a.CityID = b.CityID 
		LEFT JOIN
		(
			select CityID cid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from 
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea, 
				sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
				sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
				sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
				sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
				sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
				sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
				sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																																	
				sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
				sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
				sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
				sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
				sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
				sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
				sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
				from 
				(
					select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
				) base                                                                
				LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
				LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
				GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			)  g
			WHERE g.provinceid = #{TProvinceId} 
			GROUP BY g.CityID
		) c on a.CityID = c.cid
		where 1 = 1
			and a.provinceid  = #{TProvinceId}
	</select>
	
		<!--2019-01-01开始执行新的客户分段及返利金额逻辑
		查询时间段最后时间为2019-01-01及2019-01-01后面的，就使用新逻辑判断
	 -->
	<select id="getDoWithCityShiNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
			select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
						qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) a
		LEFT JOIN 
		(
				select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)   c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
						qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) b
		ON a.CityID = b.CityID 
		LEFT JOIN
		(
			select CityID cid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from 
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea, 
				sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
				sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
				sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
				sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
				sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
				sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
				sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																																	
				sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
				sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
				sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
				sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
				sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
				sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
				sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
				from 
				(
					select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
				) base                                                                
				LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
				LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
				GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			)  g
			WHERE g.provinceid = #{TProvinceId} 
			GROUP BY g.CityID
		) c on a.CityID = c.cid
		where 1 = 1
			and a.provinceid  = #{TProvinceId}
	</select>
	
	<select id="getDoWithCustnumber" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		select a.branch_code,a.customer_id,
		ifnull(order_sum,0) order_sum, 
		cast(ifnull(order_avg,0) as decimal(10,2))   order_avg,
		ifnull(price_level,'a') price_level ,
		ifnull(b_order_sum,0) b_order_sum,
		cast(ifnull(b_order_avg,0) as decimal(10,2))   b_order_avg,
		ifnull(b_price_level,'a') b_price_level , 
		gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,CASE a.customer_source_type 
		WHEN 1 THEN '菜鸟' WHEN 2 THEN '二维码' WHEN 4 THEN '京东' ELSE '拼多多' END customer_source_type 
		from 
		(
			select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
		) a
		LEFT JOIN ydserver.gs gs on a.branch_code = gs.bm                                                                              
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
		<where> 
			and a.bd_type = #{TBdType}
			 <if test="type == 'bigarea' ">
               AND t4.bigarea= #{TRegionId}
        	 </if>
        	 <if test="type == 'province' ">
               AND t4.ProvinceID= #{TProvinceId}
        	 </if>
        	 <if test="type == 'city' ">
               AND t4.cityID= #{TCityId}
        	 </if>
        	 <if test="type == 'branch' ">
                AND a.branch_code= #{TBranchCode}
        	 </if>
			
		</where>
		<if test="offset != null and limit != null">
			 	  limit #{offset}, #{limit}
			 </if>
	</select>
	
		<!--2019-01-01开始执行新的客户分段及返利金额逻辑
		查询时间段最后时间为2019-01-01及2019-01-01后面的，就使用新逻辑判断
	 -->
	<select id="getDoWithCustnumberNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		select a.branch_code,a.customer_id,
		ifnull(order_sum,0) order_sum, 
		cast(ifnull(order_avg,0) as decimal(10,2))   order_avg,
		ifnull(price_level,'a') price_level ,
		ifnull(b_order_sum,0) b_order_sum,
		cast(ifnull(b_order_avg,0) as decimal(10,2))   b_order_avg,
		ifnull(b_price_level,'a') b_price_level , 
		gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,CASE a.customer_source_type 
		WHEN 1 THEN '菜鸟' WHEN 2 THEN '二维码' WHEN 4 THEN '京东' ELSE '拼多多' END customer_source_type 
		from 
		(
			select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
		) a
		LEFT JOIN ydserver.gs gs ON a.branch_code = gs.bm 
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                    
		<where> 
			and a.bd_type = #{TBdType}
			 <if test="type == 'bigarea' ">
               AND t4.bigarea= #{TRegionId}
        	 </if>
        	 <if test="type == 'province' ">
               AND t4.ProvinceID= #{TProvinceId}
        	 </if>
        	 <if test="type == 'city' ">
               AND t4.cityID= #{TCityId}
        	 </if>
        	 <if test="type == 'branch' ">
                AND a.branch_code= #{TBranchCode}
        	 </if>
			
		</where>
		<if test="offset != null and limit != null">
			 	  limit #{offset}, #{limit}
			 </if>
	</select>
	
	<select id="custBDcount" resultType="int">
	
		select  count(*)
		from 
		(
			select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
		) a
		LEFT JOIN ydserver.gs gs ON a.branch_code = gs.bm 
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                    
		<where> 
			 a.bd_type = #{TBdType}
			 <if test="type == 'bigarea' ">
               AND t4.bigarea= #{TRegionId}
        	 </if>
        	 <if test="type == 'province' ">
               AND t4.ProvinceID= #{TProvinceId}
        	 </if>
        	 <if test="type == 'city' ">
               AND t4.cityID= #{TCityId}
        	 </if>
        	 <if test="type == 'branch' ">
                AND a.branch_code= #{TBranchCode}
        	 </if>
			
		</where>
	</select>
	
	<select id="custBDcountNew" resultType="int">
	
		select  count(*)
		from 
		(
			select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 100  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 500 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  1000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
		) a
		LEFT JOIN ydserver.gs gs ON a.branch_code = gs.bm 
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                    
		<where> 
			 a.bd_type = #{TBdType}
			 <if test="type == 'bigarea' ">
               AND t4.bigarea= #{TRegionId}
        	 </if>
        	 <if test="type == 'province' ">
               AND t4.ProvinceID= #{TProvinceId}
        	 </if>
        	 <if test="type == 'city' ">
               AND t4.cityID= #{TCityId}
        	 </if>
        	 <if test="type == 'branch' ">
                AND a.branch_code= #{TBranchCode}
        	 </if>
			
		</where>
	</select>
	<select id="getDoWithBranchShi" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
			select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)   d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
									qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) a
		LEFT JOIN 
		(
				select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{eeeDate}, #{ssstDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)   e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where  		
									qu_date BETWEEN
									date_format (#{ssstDate},'%Y-%m-%d')
									AND
									date_format (#{eeeDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) b ON a.CityID = b.CityID
		LEFT JOIN
		(
			select CityID cid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from 
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
				sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
				sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
				sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
				sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
				sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
				sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
				sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																																	
				sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
				sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
				sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
				sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
				sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
				sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
				sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
				from 
				(
					select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
				) base                                                                
				LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
				LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format ('2019-01-01','%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
				GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.CityID = #{TCityId}
			GROUP BY f.CityID
		 
		 ) c on a.CityID = c.cid
		where 1 = 1
		and a.CityID  = #{TCityId}
	</select>
	
	<select id="getDoWithBranchShiNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		a.*,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum, 
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two, 
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
			select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)   d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where 
									qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) a
		LEFT JOIN 
		(
				select                                                                                
					  CityID,CityName,provinceid,ProvinceName,bigarea,
					  sum(order_sum           ) order_sum,                                            
					  sum(order_avg           )/(DATEDIFF(#{eeeDate}, #{ssstDate})+1) order_avg,                                            
					  sum(cainiao_order_sum   ) cainiao_order_sum,                                    
					  sum(qrcode_order_sum    ) qrcode_order_sum,                                     
					  sum(ordinary_order_sum  ) ordinary_order_sum,                                   

					                                                                                        
					  sum(customer_sum) customer_sum,                                                 
					  sum(order_avg_sum)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)     order_avg_sum,                                           
					  sum(dianzi_order_sum)     dianzi_order_sum,                                     
					                                                                                        
					  sum(a_customer_sum)    a_customer_sum,                                          
					  sum(b_customer_sum)    b_customer_sum,                                          
					  sum(c_customer_sum)    c_customer_sum,                                          
					  sum(d_customer_sum)    d_customer_sum,                                          
					  sum(e_customer_sum)    e_customer_sum,                                          
					  sum(f_customer_sum)    f_customer_sum,                                          
					  sum(g_customer_sum)    g_customer_sum,                                          
					                                                                                        
					  sum(a_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    a_order_avg,                                                
					  sum(b_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    b_order_avg,                                                
					  sum(c_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    c_order_avg,                                                
					  sum(d_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    d_order_avg,                                                
					  sum(e_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)   e_order_avg,                                                
					  sum(f_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    f_order_avg,                                                
					  sum(g_order_avg)/(DATEDIFF(#{eeeDate}, #{ssstDate})+1)    g_order_avg,                                                
					                                                                                        
					  sum(a_order_sum) a_order_sum,                                                   
					  sum(b_order_sum) b_order_sum,                                                   
					  sum(c_order_sum) c_order_sum,                                                   
					  sum(d_order_sum) d_order_sum,                                                   
					  sum(e_order_sum) e_order_sum,                                                   
					  sum(f_order_sum) f_order_sum,                                                   
					  sum(g_order_sum) g_order_sum                                                    
					  from tmpv2_city_od_sum                                            
						where  		
									qu_date BETWEEN
									date_format (#{ssstDate},'%Y-%m-%d')
									AND
									date_format (#{eeeDate},'%Y-%m-%d')
					  GROUP BY CityID,CityName,provinceid,ProvinceName,bigarea	
		) b ON a.CityID = b.CityID
		LEFT JOIN
		(
			select CityID cid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum, 
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from 
			(
				select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
				sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
				sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
				sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
				sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
				sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
				sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
				sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
																																																																																	
				sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
				sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
				sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
				sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
				sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
				sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
				sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
				from 
				(
					select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
				) base                                                                
				LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
				LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format ('2019-01-01','%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
				GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.CityID = #{TCityId}
			GROUP BY f.CityID
		 
		 ) c on a.CityID = c.cid
		where 1 = 1
		and a.CityID  = #{TCityId}
	</select>
	
	<select id="getDoWithBranchGs1" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		b.branch_code,gs.mc branch_name,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(a.a_customer_sum,0) a_customer_sum, 
		ifnull(a.b_customer_sum,0) b_customer_sum,
		ifnull(a.c_customer_sum,0) c_customer_sum,
		ifnull(a.d_customer_sum,0) d_customer_sum,
		ifnull(a.e_customer_sum,0) e_customer_sum,
		ifnull(a.f_customer_sum,0) f_customer_sum,
		ifnull(a.g_customer_sum,0) g_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two,
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
				
							 qu_date BETWEEN
									date_format (#{sssdate},'%Y-%m-%d')
									AND
									date_format (#{eeedate},'%Y-%m-%d')

				group by branch_code
		)b
		LEFT JOIN ydserver.gs gs ON b.branch_code = gs.bm
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date   
		LEFT JOIN 
		(
			select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
				
							qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
				group by branch_code
		) a 
		ON a.branch_code = b.branch_code
		LEFT JOIN 
		(
			select branch_code bid,
				sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
				sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
				sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
				sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
				sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
				sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
				sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
				from 
				(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
				) f
				WHERE f.branch_code = #{TbranchCode} 
				GROUP BY f.branch_code
		) c on b.branch_code = c.bid
		where 1 = 1
		and gs.bm = #{TbranchCode}
	</select>
	
	<select id="getDoWithBranchGs1New" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		b.branch_code,gs.mc branch_name,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(a.a_customer_sum,0) a_customer_sum, 
		ifnull(a.b_customer_sum,0) b_customer_sum,
		ifnull(a.c_customer_sum,0) c_customer_sum,
		ifnull(a.d_customer_sum,0) d_customer_sum,
		ifnull(a.e_customer_sum,0) e_customer_sum,
		ifnull(a.f_customer_sum,0) f_customer_sum,
		ifnull(a.g_customer_sum,0) g_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two,
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
				
							 qu_date BETWEEN
									date_format (#{sssdate},'%Y-%m-%d')
									AND
									date_format (#{eeedate},'%Y-%m-%d')

				group by branch_code
		)b
		LEFT JOIN ydserver.gs gs ON b.branch_code = gs.bm
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date   
		LEFT JOIN 
		(
			select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
				
							qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
				group by branch_code
		) a 
		ON a.branch_code = b.branch_code
		LEFT JOIN 
		(
			select branch_code bid,
				sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
				sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
				sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
				sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
				sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
				sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
				sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
				from 
				(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
				) f
				WHERE f.branch_code = #{TbranchCode} 
				GROUP BY f.branch_code
		) c on b.branch_code = c.bid
		where 1 = 1
		and gs.bm = #{TbranchCode}
	</select>
	
	<select id="getDoWithBranchGs2" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		b.branch_code,gs.mc branch_name,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(a.a_customer_sum,0) a_customer_sum, 
		ifnull(a.b_customer_sum,0) b_customer_sum,
		ifnull(a.c_customer_sum,0) c_customer_sum,
		ifnull(a.d_customer_sum,0) d_customer_sum,
		ifnull(a.e_customer_sum,0) e_customer_sum,
		ifnull(a.f_customer_sum,0) f_customer_sum,
		ifnull(a.g_customer_sum,0) g_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two,
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
						 qu_date BETWEEN
											date_format (#{sssdate},'%Y-%m-%d')
											AND
											date_format (#{eeedate},'%Y-%m-%d')
				group by branch_code
		) b
		LEFT JOIN ydserver.gs gs ON b.branch_code = gs.bm
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date   
		LEFT JOIN 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
							 qu_date  BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
				group by branch_code
		) a ON a.branch_code = b.branch_code
		LEFT JOIN 
		(
			select branch_code bid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
			from 
			(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.CityID = #{TCityId} 
			GROUP BY f.branch_code
		) c on b.branch_code = c.bid 
		where 1 = 1 and	t4.CityID = #{TCityId}
	</select>
	
	<select id="getDoWithBranchGs2New" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
		b.branch_code,gs.mc branch_name,
		ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
		ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
		ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
		ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
		ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
		ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
		ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
		ifnull(a.a_customer_sum,0) a_customer_sum, 
		ifnull(a.b_customer_sum,0) b_customer_sum,
		ifnull(a.c_customer_sum,0) c_customer_sum,
		ifnull(a.d_customer_sum,0) d_customer_sum,
		ifnull(a.e_customer_sum,0) e_customer_sum,
		ifnull(a.f_customer_sum,0) f_customer_sum,
		ifnull(a.g_customer_sum,0) g_customer_sum,
		ifnull(b.a_customer_sum,0) a_customer_sum_two,
		ifnull(b.b_customer_sum,0) b_customer_sum_two,
		ifnull(b.c_customer_sum,0) c_customer_sum_two,
		ifnull(b.d_customer_sum,0) d_customer_sum_two,
		ifnull(b.e_customer_sum,0) e_customer_sum_two,
		ifnull(b.f_customer_sum,0) f_customer_sum_two,
		ifnull(b.g_customer_sum,0) g_customer_sum_two
		FROM 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
						 qu_date BETWEEN
											date_format (#{sssdate},'%Y-%m-%d')
											AND
											date_format (#{eeedate},'%Y-%m-%d')
				group by branch_code
		) b
		LEFT JOIN ydserver.gs gs ON b.branch_code = gs.bm
		LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date   
		LEFT JOIN 
		(
				select branch_code,sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_gs_od_sum
				where 
							 qu_date  BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
				group by branch_code
		) a ON a.branch_code = b.branch_code
		LEFT JOIN 
		(
			select branch_code bid,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
			from 
			(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			WHERE f.CityID = #{TCityId} 
			GROUP BY f.branch_code
		) c on b.branch_code = c.bid 
		where 1 = 1 
			and	t4.CityID = #{TCityId}
	</select>
	
	<select id="getDoWithProvinceAllCountData" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		select c.*,
			a.*,
			ifnull(b.a_customer_sum,0) a_customer_sum_two, 
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two, 
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			from 
			(
						select sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
						sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
						sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
						sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,sum(dianzi_order_sum) dianzi_order_sum,
						sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,sum(c_customer_sum) c_customer_sum,
						sum(d_customer_sum) d_customer_sum,sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
						sum(g_customer_sum) g_customer_sum,
						sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
						sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
						sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
						sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
						sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
						sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
						sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
						sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
						sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
						sum(g_order_sum)
						 from tmpv2_all_od_sum
						 where 1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
			) a,
			(
					select sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
					sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
					sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
					sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,sum(dianzi_order_sum) dianzi_order_sum,
					sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,sum(c_customer_sum) c_customer_sum,
					sum(d_customer_sum) d_customer_sum,sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
					sum(g_customer_sum) g_customer_sum,
					sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
					sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
					sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
					sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
					sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
					sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
					sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
					sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
					sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
					sum(g_order_sum)
					from tmpv2_all_od_sum
					where 1 = 1
						 and qu_date BETWEEN
						date_format (#{sssdate},'%Y-%m-%d')
						AND
						date_format (#{eeedate},'%Y-%m-%d')
			) b,
			(
			select
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from
				(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
				) d
			) c
	</select>
	
	<select id="getDoWithProvinceAllCountDataNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		select c.*,
			a.*,
			ifnull(b.a_customer_sum,0) a_customer_sum_two, 
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two, 
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			from 
			(
						select sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
						sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
						sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
						sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,sum(dianzi_order_sum) dianzi_order_sum,
						sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,sum(c_customer_sum) c_customer_sum,
						sum(d_customer_sum) d_customer_sum,sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
						sum(g_customer_sum) g_customer_sum,
						sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
						sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
						sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
						sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
						sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
						sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
						sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
						sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
						sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
						sum(g_order_sum)
						 from tmpv2_all_od_sum
						 where 1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
			) a,
			(
					select sum(order_sum) order_sum,sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
					sum(cainiao_order_sum) cainiao_order_sum,sum(qrcode_order_sum) qrcode_order_sum,
					sum(ordinary_order_sum) ordinary_order_sum,sum(customer_sum) customer_sum,
					sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,sum(dianzi_order_sum) dianzi_order_sum,
					sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,sum(c_customer_sum) c_customer_sum,
					sum(d_customer_sum) d_customer_sum,sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
					sum(g_customer_sum) g_customer_sum,
					sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
					sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
					sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
					sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
					sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
					sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
					sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
					sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
					sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
					sum(g_order_sum)
					from tmpv2_all_od_sum
					where 1 = 1
						 and qu_date BETWEEN
						date_format (#{sssdate},'%Y-%m-%d')
						AND
						date_format (#{eeedate},'%Y-%m-%d')
			) b,
			(
			select
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
			from
				(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea, 
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 1 = 1
									and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
									
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
				) d
			) c
	</select>
	
	<select id="getDoWithProvinceBigArea" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
			a.*,
			ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
			ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
			ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
			ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
			ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
			ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
			ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
			ifnull(b.a_customer_sum,0) a_customer_sum_two,
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two,
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			FROM 
			(
				select bigarea,
				sum(order_sum) order_sum,
				sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,
				sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,
				sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_bigarea_od_sum
				where 1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY bigarea
			) a
			LEFT JOIN 
			(
				select bigarea,
				sum(order_sum) order_sum,
				sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,
				sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,
				sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_bigarea_od_sum
				where 1 = 1
							 and qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY bigarea
			) b ON a.bigarea = b.bigarea
			LEFT JOIN (select bigarea,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
			from 
					(
							select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,
								sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
								sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
								sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
								sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
								sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
								sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
								sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
								sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
								sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
								sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
								sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
								sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
								sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
								sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
								from 
								(
									select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
								) base                                                                
								LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
								LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
								GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
					) f
			where 1 = 1
			GROUP BY bigarea
			) c ON a.bigarea = c.bigarea
			<where>
				1 = 1
				<if test="TTmpField == &quot;D&quot; ">
					AND a.bigarea in
					<foreach collection="TRegionId" item="TRegionId" index="index"  open="(" close=")" separator=",">
			           '${TRegionId}'
			       	</foreach>
		        </if>
			</where>
			
			ORDER BY case when a.bigarea='广东大区' then 1 when a.bigarea='上海大区' then 2 when a.bigarea='北京大区' then 3 
			when a.bigarea='江苏大区' then 4 when a.bigarea='浙江大区' then 5 when a.bigarea='华中西南大区' then 6 else 7 end 
	</select>
	
	<select id="getDoWithProvinceBigAreaNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
			a.*,
			ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
			ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
			ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
			ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
			ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
			ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
			ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
			ifnull(b.a_customer_sum,0) a_customer_sum_two,
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two,
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			FROM 
			(
				select bigarea,
				sum(order_sum) order_sum,
				sum(order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,
				sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,
				sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_bigarea_od_sum
				where 1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY bigarea
			) a
			LEFT JOIN 
			(
				select bigarea,
				sum(order_sum) order_sum,
				sum(order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,
				sum(cainiao_order_sum) cainiao_order_sum,
				sum(qrcode_order_sum) qrcode_order_sum,
				sum(ordinary_order_sum) ordinary_order_sum,
				sum(customer_sum) customer_sum,
				sum(order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg_sum,
				sum(dianzi_order_sum) dianzi_order_sum,
				sum(a_customer_sum) a_customer_sum,sum(b_customer_sum) b_customer_sum,
				sum(c_customer_sum) c_customer_sum,sum(d_customer_sum) d_customer_sum,
				sum(e_customer_sum) e_customer_sum,sum(f_customer_sum) f_customer_sum,
				sum(g_customer_sum) g_customer_sum,
				sum(a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) a_order_avg,
				sum(b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) b_order_avg,
				sum(c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) c_order_avg,
				sum(d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) d_order_avg,
				sum(e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) e_order_avg,
				sum(f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) f_order_avg,
				sum(g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1) g_order_avg,
				sum(a_order_sum) a_order_sum,sum(b_order_sum) b_order_sum,sum(c_order_sum) c_order_sum,
				sum(d_order_sum) d_order_sum,sum(e_order_sum) e_order_sum,sum(f_order_sum) f_order_sum,
				sum(g_order_sum) g_order_sum
				from tmpv2_bigarea_od_sum
				where 1 = 1
							 and qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY bigarea
			) b ON a.bigarea = b.bigarea
			LEFT JOIN (select bigarea,
			sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
			sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
			sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
			sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
			sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
			sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
			sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum 
			from 
					(
							select base.branch_code,gs.mc branch_name,  t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,
								sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
								sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
								sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
								sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
								sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
								sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
								sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
								sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
								sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
								sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
								sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
								sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
								sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
								sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
								from 
								(
									select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
								) base                                                                
								LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
								LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
								GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
					) f
			where 1 = 1
			GROUP BY bigarea
			) c ON a.bigarea = c.bigarea
			<where>
				1 = 1
				<if test="TTmpField == &quot;D&quot; ">
					AND a.bigarea in
					<foreach collection="TRegionId" item="TRegionId" index="index"  open="(" close=")" separator=",">
			           '${TRegionId}'
			       	</foreach>
		        </if>
			</where>
			
			ORDER BY case when a.bigarea='广东大区' then 1 when a.bigarea='上海大区' then 2 when a.bigarea='北京大区' then 3 
			when a.bigarea='江苏大区' then 4 when a.bigarea='浙江大区' then 5 when a.bigarea='华中西南大区' then 6 else 7 end 
	</select>
	
	<select id="getDoWithProvinceSheng" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
			a.*,
			ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
			ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
			ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
			ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
			ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
			ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
			ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
			ifnull(b.a_customer_sum,0) a_customer_sum_two,
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two,
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			FROM 
			(
				select                                                 
				base4.provinceid,base4.ProvinceName,base4.bigarea,     
				sum(base4.order_sum           ) order_sum,             
				sum(base4.order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,             
				sum(base4.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base4.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base4.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(base4.customer_sum) customer_sum,                  
				sum(base4.order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,            
				sum(base4.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(base4.a_customer_sum)    a_customer_sum,           
				sum(base4.b_customer_sum)    b_customer_sum,           
				sum(base4.c_customer_sum)    c_customer_sum,           
				sum(base4.d_customer_sum)    d_customer_sum,           
				sum(base4.e_customer_sum)    e_customer_sum,           
				sum(base4.f_customer_sum)    f_customer_sum,           
				sum(base4.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(base4.a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                 
				sum(base4.b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                 
				sum(base4.c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                 
				sum(base4.d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                 
				sum(base4.e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                 
				sum(base4.f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                 
				sum(base4.g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                 
				                                                       
				sum(base4.a_order_sum) a_order_sum,                    
				sum(base4.b_order_sum) b_order_sum,                    
				sum(base4.c_order_sum) c_order_sum,                    
				sum(base4.d_order_sum) d_order_sum,                    
				sum(base4.e_order_sum) e_order_sum,                    
				sum(base4.f_order_sum) f_order_sum,                    
				sum(base4.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base4  
				where 
				1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY base4.provinceid,base4.ProvinceName,base4.bigarea
			) a
			LEFT JOIN 
			(
				select                                                 
				base5.provinceid,base5.ProvinceName,base5.bigarea,     
				sum(base5.order_sum           ) order_sum,             
				sum(base5.order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,             
				sum(base5.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base5.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base5.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(base5.customer_sum) customer_sum,                  
				sum(base5.order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,            
				sum(base5.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(base5.a_customer_sum)    a_customer_sum,           
				sum(base5.b_customer_sum)    b_customer_sum,           
				sum(base5.c_customer_sum)    c_customer_sum,           
				sum(base5.d_customer_sum)    d_customer_sum,           
				sum(base5.e_customer_sum)    e_customer_sum,           
				sum(base5.f_customer_sum)    f_customer_sum,           
				sum(base5.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(base5.a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                 
				sum(base5.b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                 
				sum(base5.c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    c_order_avg,                 
				sum(base5.d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                 
				sum(base5.e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                 
				sum(base5.f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                 
				sum(base5.g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)   g_order_avg,                 
				                                                       
				sum(base5.a_order_sum) a_order_sum,                    
				sum(base5.b_order_sum) b_order_sum,                    
				sum(base5.c_order_sum) c_order_sum,                    
				sum(base5.d_order_sum) d_order_sum,                    
				sum(base5.e_order_sum) e_order_sum,                    
				sum(base5.f_order_sum) f_order_sum,                    
				sum(base5.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base5
				where 
				1 = 1
							 and qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY base5.provinceid,base5.ProvinceName,base5.bigarea
			) b ON a.provinceid = b.provinceid
			LEFT JOIN 
			(
				select provinceid pid,
				sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
				sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
				sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
				sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
				sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
				sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
				sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
				from
				(
					select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,
						sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
						sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
						sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
						sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
						sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
						sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
						sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
						sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
						sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
						sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
						sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
						sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
						sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
						sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
						from 
						(
							select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
								case 
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 50 then 'a'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 200  then 'b'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 200  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt; 1000 then 'c'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  2000 then 'd'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 2000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  3000 then 'e'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;  5000 then 'f'
								when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 5000 then 'g'
								else null end as b_price_level ,
								CASE
								WHEN b_price_level IS NULL THEN
								concat(price_level, '_lost')
								WHEN price_level IS NULL THEN
								concat(b_price_level, '_add')
								WHEN order_avg &gt; b_order_avg THEN
								concat(price_level, '_lost')
								WHEN order_avg &lt; b_order_avg THEN
								concat(b_price_level, '_add')
								END AS bd_type
								from  tmpv2_cust_fluctuate_sum
								where 
								1 = 1
									 and qu_date BETWEEN
									date_format (#{startDate},'%Y-%m-%d')
									AND
									date_format (#{endDate},'%Y-%m-%d')
								group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
						) base                                                                
						LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
						LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
						GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
				) f
				<where>
					1 = 1
					and f.bigarea = #{DBigArea}
					<if test="TTmpField == &quot;S&quot;">
	                	and f.provinceid in 
	                	<foreach collection="TProvinceID" item="TProvinceID"  index="index" open="(" close=")" separator=",">
				           '${TProvinceID}'
				       	</foreach>	
	       			</if>
	       			
				</where>
	       		GROUP BY provinceid
       		) c on a.provinceid = c.pid
			<where>
				1 = 1
				and a.bigarea = #{DBigArea}
				<if test="TTmpField == &quot;S&quot;">
                	and a.provinceid in 
                	<foreach collection="tProvinceID" item="tProvinceID"  index="index" open="(" close=")" separator=",">
			           '${tProvinceID}'
			       	</foreach>	
       			</if>
			</where>
	</select>
	
	<select id="getDoWithProvinceShengNew" resultType="com.yunda.base.feiniao.report.domain.ReportFluctuateDO">
		SELECT
			a.*,
			ifnull(c.a_lost_customer_sum,0) a_lost_customer_sum, ifnull(c.a_add_customer_sum,0) a_add_customer_sum,
			ifnull(c.b_lost_customer_sum,0) b_lost_customer_sum, ifnull(c.b_add_customer_sum,0) b_add_customer_sum,
			ifnull(c.c_lost_customer_sum,0) c_lost_customer_sum, ifnull(c.c_add_customer_sum,0) c_add_customer_sum,
			ifnull(c.d_lost_customer_sum,0) d_lost_customer_sum, ifnull(c.d_add_customer_sum,0) d_add_customer_sum,
			ifnull(c.e_lost_customer_sum,0) e_lost_customer_sum, ifnull(c.e_add_customer_sum,0) e_add_customer_sum,
			ifnull(c.f_lost_customer_sum,0) f_lost_customer_sum, ifnull(c.f_add_customer_sum,0) f_add_customer_sum,
			ifnull(c.g_lost_customer_sum,0) g_lost_customer_sum, ifnull(c.g_add_customer_sum,0) g_add_customer_sum,
			ifnull(b.a_customer_sum,0) a_customer_sum_two,
			ifnull(b.b_customer_sum,0) b_customer_sum_two,
			ifnull(b.c_customer_sum,0) c_customer_sum_two,
			ifnull(b.d_customer_sum,0) d_customer_sum_two,
			ifnull(b.e_customer_sum,0) e_customer_sum_two,
			ifnull(b.f_customer_sum,0) f_customer_sum_two,
			ifnull(b.g_customer_sum,0) g_customer_sum_two
			FROM 
			(
				select                                                 
				base4.provinceid,base4.ProvinceName,base4.bigarea,     
				sum(base4.order_sum           ) order_sum,             
				sum(base4.order_avg           )/(DATEDIFF(#{endDate}, #{startDate})+1) order_avg,             
				sum(base4.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base4.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base4.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(base4.customer_sum) customer_sum,                  
				sum(base4.order_avg_sum)/(DATEDIFF(#{endDate}, #{startDate})+1)     order_avg_sum,            
				sum(base4.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(base4.a_customer_sum)    a_customer_sum,           
				sum(base4.b_customer_sum)    b_customer_sum,           
				sum(base4.c_customer_sum)    c_customer_sum,           
				sum(base4.d_customer_sum)    d_customer_sum,           
				sum(base4.e_customer_sum)    e_customer_sum,           
				sum(base4.f_customer_sum)    f_customer_sum,           
				sum(base4.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(base4.a_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    a_order_avg,                 
				sum(base4.b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    b_order_avg,                 
				sum(base4.c_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    c_order_avg,                 
				sum(base4.d_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    d_order_avg,                 
				sum(base4.e_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    e_order_avg,                 
				sum(base4.f_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    f_order_avg,                 
				sum(base4.g_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1)    g_order_avg,                 
				                                                       
				sum(base4.a_order_sum) a_order_sum,                    
				sum(base4.b_order_sum) b_order_sum,                    
				sum(base4.c_order_sum) c_order_sum,                    
				sum(base4.d_order_sum) d_order_sum,                    
				sum(base4.e_order_sum) e_order_sum,                    
				sum(base4.f_order_sum) f_order_sum,                    
				sum(base4.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base4  
				where 
				1 = 1
							 and qu_date BETWEEN
							date_format (#{startDate},'%Y-%m-%d')
							AND
							date_format (#{endDate},'%Y-%m-%d')
				GROUP BY base4.provinceid,base4.ProvinceName,base4.bigarea
			) a
			LEFT JOIN 
			(
				select                                                 
				base5.provinceid,base5.ProvinceName,base5.bigarea,     
				sum(base5.order_sum           ) order_sum,             
				sum(base5.order_avg           )/(DATEDIFF(#{eeedate}, #{sssdate})+1) order_avg,             
				sum(base5.cainiao_order_sum   ) cainiao_order_sum,     
				sum(base5.qrcode_order_sum    ) qrcode_order_sum,      
				sum(base5.ordinary_order_sum  ) ordinary_order_sum,    
				                                                       
				sum(base5.customer_sum) customer_sum,                  
				sum(base5.order_avg_sum)/(DATEDIFF(#{eeedate}, #{sssdate})+1)     order_avg_sum,            
				sum(base5.dianzi_order_sum)     dianzi_order_sum,      
				                                                       
				sum(base5.a_customer_sum)    a_customer_sum,           
				sum(base5.b_customer_sum)    b_customer_sum,           
				sum(base5.c_customer_sum)    c_customer_sum,           
				sum(base5.d_customer_sum)    d_customer_sum,           
				sum(base5.e_customer_sum)    e_customer_sum,           
				sum(base5.f_customer_sum)    f_customer_sum,           
				sum(base5.g_customer_sum)    g_customer_sum,           
				                                                       
				sum(base5.a_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    a_order_avg,                 
				sum(base5.b_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    b_order_avg,                 
				sum(base5.c_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    c_order_avg,                 
				sum(base5.d_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    d_order_avg,                 
				sum(base5.e_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    e_order_avg,                 
				sum(base5.f_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)    f_order_avg,                 
				sum(base5.g_order_avg)/(DATEDIFF(#{eeedate}, #{sssdate})+1)   g_order_avg,                 
				                                                       
				sum(base5.a_order_sum) a_order_sum,                    
				sum(base5.b_order_sum) b_order_sum,                    
				sum(base5.c_order_sum) c_order_sum,                    
				sum(base5.d_order_sum) d_order_sum,                    
				sum(base5.e_order_sum) e_order_sum,                    
				sum(base5.f_order_sum) f_order_sum,                    
				sum(base5.g_order_sum) g_order_sum                     
				from tmpv2_province_od_sum base5
				where 
				1 = 1
							 and qu_date BETWEEN
							date_format (#{sssdate},'%Y-%m-%d')
							AND
							date_format (#{eeedate},'%Y-%m-%d')
				GROUP BY base5.provinceid,base5.ProvinceName,base5.bigarea
			) b ON a.provinceid = b.provinceid
			LEFT JOIN 
			(
				select provinceid pid,
				sum(a_lost_customer_sum) a_lost_customer_sum, sum(a_add_customer_sum) a_add_customer_sum,
				sum(b_lost_customer_sum) b_lost_customer_sum, sum(b_add_customer_sum) b_add_customer_sum,
				sum(c_lost_customer_sum) c_lost_customer_sum, sum(c_add_customer_sum) c_add_customer_sum,
				sum(d_lost_customer_sum) d_lost_customer_sum, sum(d_add_customer_sum) d_add_customer_sum,
				sum(e_lost_customer_sum) e_lost_customer_sum, sum(e_add_customer_sum) e_add_customer_sum,
				sum(f_lost_customer_sum) f_lost_customer_sum, sum(f_add_customer_sum) f_add_customer_sum,
				sum(g_lost_customer_sum) g_lost_customer_sum, sum(g_add_customer_sum) g_add_customer_sum
				from
				(
							select base.branch_code,gs.mc branch_name, t4.CityID,t4.CityName,t4.ProvinceID provinceid,t4.ProvinceName,t4.bigarea,
								sum(case when base.bd_type='a_lost' then 1 else 0 end)    a_lost_customer_sum,                                                    
								sum(case when base.bd_type='b_lost' then 1 else 0 end)    b_lost_customer_sum,                                                    
								sum(case when base.bd_type='c_lost' then 1 else 0 end)    c_lost_customer_sum,                                                    
								sum(case when base.bd_type='d_lost' then 1 else 0 end)    d_lost_customer_sum,                                                    
								sum(case when base.bd_type='e_lost' then 1 else 0 end)    e_lost_customer_sum,                                                    
								sum(case when base.bd_type='f_lost' then 1 else 0 end)    f_lost_customer_sum,                                                    
								sum(case when base.bd_type='g_lost' then 1 else 0 end)     g_lost_customer_sum,                                                   
								sum(case when base.bd_type='a_add' then 1 else 0 end)    a_add_customer_sum,                                                     
								sum(case when base.bd_type='b_add' then 1 else 0 end)    b_add_customer_sum,                                                     
								sum(case when base.bd_type='c_add' then 1 else 0 end)    c_add_customer_sum,                                                     
								sum(case when base.bd_type='d_add' then 1 else 0 end)    d_add_customer_sum,                                                     
								sum(case when base.bd_type='e_add' then 1 else 0 end)    e_add_customer_sum,                                                     
								sum(case when base.bd_type='f_add' then 1 else 0 end)    f_add_customer_sum,                                                     
								sum(case when base.bd_type='g_add' then 1 else 0 end)    g_add_customer_sum                                                      
								from 
								(
									select customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,sum(b_order_sum) b_order_sum,sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) b_order_avg,
										case 
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt;= 0   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 50  then 'a'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 50   and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 100  then 'b'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 100  and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;= 500 then 'c'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 500 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  1000 then 'd'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 1000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  3000 then 'e'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 3000 and sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &lt;=  5000 then 'f'
										when sum(b_order_avg)/(DATEDIFF(#{endDate}, #{startDate})+1) &gt; 5000 then 'g'
										else null end as b_price_level ,
										CASE
										WHEN b_price_level IS NULL THEN
										concat(price_level, '_lost')
										WHEN price_level IS NULL THEN
										concat(b_price_level, '_add')
										WHEN order_avg &gt; b_order_avg THEN
										concat(price_level, '_lost')
										WHEN order_avg &lt; b_order_avg THEN
										concat(b_price_level, '_add')
										END AS bd_type
										from  tmpv2_cust_fluctuate_sum
										where 
										1 = 1
											 and qu_date BETWEEN
											date_format (#{startDate},'%Y-%m-%d')
											AND
											date_format (#{endDate},'%Y-%m-%d')
										group by customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level
								) base                                                                
								LEFT JOIN ydserver.gs gs on base.branch_code = gs.bm                                                                              
								LEFT JOIN crmkhv2_regional_basic_information t4 ON gs.szd = t4.CountyID  and date_format (#{endDate},'%Y-%m-%d') BETWEEN t4.start_date AND t4.end_date                                                              
								GROUP BY t4.CityID,t4.CityName,t4.provinceid,t4.ProvinceName,t4.bigarea,base.branch_code
			) f
			
			<where>
				1 = 1
				and f.bigarea = #{DBigArea}
				<if test="TTmpField == &quot;S&quot;">
                	and f.provinceid in 
                	<foreach collection="TProvinceID" item="TProvinceID"  index="index" open="(" close=")" separator=",">
			           '${TProvinceID}'
			       	</foreach>	
       			</if>
       			
			</where>
       		GROUP BY provinceid) c on a.provinceid = c.pid
			<where>
				1 = 1
				and a.bigarea = #{DBigArea}
				<if test="TTmpField == &quot;S&quot;">
                	and a.provinceid in 
                	<foreach collection="tProvinceID" item="tProvinceID"  index="index" open="(" close=")" separator=",">
			           '${tProvinceID}'
			       	</foreach>	
       			</if>
			</where>
	</select>
	
	
	<!--#每天task执行，获取每日客户波动基础数据  -->
	<insert id="saveBdByCustomer" >
		insert tmpv2_cust_fluctuate_sum (customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,b_order_sum,b_order_avg,b_price_level,qu_date)
			SELECT
			a.*
			FROM
			(
				SELECT
					a.customer_id,a.customer_name,a.branch_code,a.customer_source_type,a.gs,a.order_sum,a.order_avg,a.price_level, b.order_sum b_order_sum,
					b.order_avg b_order_avg,
					b.price_level b_price_level,
					#{targetDay} as qu_date
				FROM tmpv2_cust_od_month_sum a
				LEFT JOIN tmpv2_cust_od_sum b ON a.customer_id = b.customer_id and a.customer_source_type = b.customer_source_type
				and b.qu_date = date_format(#{targetDay},'%Y-%m-%d') 
				where a.search_month = #{searchMonth} 
				UNION
				(
					SELECT
					b.customer_id,
					b.customer_name,
					b.branch_code,
					b.customer_source_type,
					b.gs,
					NULL order_sum,
					NULL order_avg,
					NULL price_level,
					b.order_sum b_order_sum,
					b.order_avg b_order_avg,
					b.price_level b_price_level,
					#{targetDay} as qu_date
					FROM tmpv2_cust_od_month_sum a
					RIGHT JOIN tmpv2_cust_od_sum b ON a.customer_id = b.customer_id and b.qu_date = date_format(#{targetDay},'%Y-%m-%d') 
					WHERE 	a.customer_id IS NULL
					and a.search_month = #{searchMonth} 
				
				)
			) a
			WHERE
			a.b_price_level IS NULL
			OR a.price_level IS NULL
			OR a.price_level != a.b_price_level 
	</insert>
	
	<!--#每天task执行，获取每日客户波动基础数据 2018-08-01之前跑的任务  -->
	<insert id="saveBdByCustomerBefore20180801" >
				insert tmpv2_cust_fluctuate_sum (customer_id,customer_name,branch_code,customer_source_type,gs,order_sum,order_avg,price_level,b_order_sum,b_order_avg,b_price_level,qu_date)
			SELECT
			a.*
			FROM
			(
				SELECT
					a.customer_id,a.customer_name,a.branch_code,a.customer_source_type,a.gs,a.order_sum,a.order_avg,a.price_level, b.order_sum b_order_sum,
					b.order_avg b_order_avg,
					b.price_level b_price_level,
					#{targetDay} as qu_date
				FROM tmpv2_cust_od_month_sum a
				LEFT JOIN tmpv2_cust_od_sum b ON a.customer_id = b.customer_id and a.customer_source_type = b.customer_source_type
				and  b.qu_date = date_format(#{targetDay},'%Y-%m-%d')
				where a.search_month = #{searchMonth} 
				UNION
				(
					SELECT
					b.customer_id,
					b.customer_name,
					b.branch_code,
					b.customer_source_type,
					b.gs,
					NULL order_sum,
					NULL order_avg,
					NULL price_level,
					b.order_sum b_order_sum,
					b.order_avg b_order_avg,
					b.price_level b_price_level,
					#{targetDay} as qu_date
					FROM tmpv2_cust_od_month_sum a
					RIGHT JOIN tmpv2_cust_od_sum b ON a.customer_id = b.customer_id and b.qu_date = date_format(#{targetDay},'%Y-%m-%d') 
					WHERE 	a.customer_id IS NULL and a.customer_source_type = b.customer_source_type
					and a.search_month = #{searchMonth} 
				
				)
			) a
			WHERE
			a.b_price_level IS NULL
			OR a.price_level IS NULL
			OR a.price_level != a.b_price_level 
	</insert> 
	<!--删除     每日客户波动基础数据 -->
	<delete id="removeBdByCustomer" parameterType="java.util.Date">
				delete from tmpv2_cust_fluctuate_sum where qu_date = date_format(#{targetDay},'%Y-%m-%d')
		</delete>
</mapper>